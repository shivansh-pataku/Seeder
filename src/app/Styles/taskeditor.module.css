/* src/app/Styles/taskeditor.module.css */
.editor_title .editor_field{
  margin-bottom: 12px;
  background-color: rgba(138, 5, 5, 0);
  border: 1px solid rgba(174, 5, 5, 0.5);
  color: red;
}

/* text area and input styles */
.editor_textarea, .editor_input {
  width: 100%;
  height:auto;
  padding: 8px;
  box-sizing: border-box;
  background-color: transparent;
  color: var(--task-editor-text);
  resize: none;
}

/* Updated titleBlock for auto-resizing textarea */
.titleBlock{
  font-family: 'Golos Text', sans-serif;
  font-size: 3rem;
  font-weight: 650;
  border: none;
  border-bottom: solid 1px var(--task-title-border);
  color: var(--task-editor-text);
  background: transparent;
  width: 100%;
  word-wrap: break-word;
  white-space: pre-wrap;
  padding: 0;
  line-height: 1.2;
  outline: none;
  resize: none;
  overflow: hidden;
  box-sizing: border-box;
  transition: all 0.3s ease;
}

.descriptionBlock{
  font-size: 1rem;
  margin-top: 1rem;
  border: none;
  background: transparent;
  color: var(--task-editor-text);
  width: 100%;
  resize: none;
  word-wrap: break-word;
  white-space: pre-wrap;
  font-family: inherit;
  padding: 8px 0;
  overflow: hidden;
  box-sizing: border-box;
  outline: none;
  line-height: 0.8;
  text-align:justify;
  font-family: 'Golos Text', sans-serif;
  font-weight: 100;
  transition: all 0.3s ease;
}

.titleBlock, .descriptionBlock {
 height: auto;
 padding: 8px;
}

/* Empty state styling */
.titleBlock:empty:before {
  content: 'Untitled';
  color: var(--task-editor-text-muted);
  font-style: italic;
}

.titleBlock:hover,
.descriptionBlock:hover {
  outline: none !important;
  background: transparent;
  background-color: var(--task-desc-hover-bg);
  transition: all 0.2s ease-in-out;
}

/* Meta field styles */
.metaField {
  flex-shrink: 0;
  margin: 0.5rem 0;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.metaLabel {
  color: var(--task-editor-text-muted);
  font-size: 0.9rem;
  min-width: 80px;
}

.metaValue {
  color: var(--task-editor-text-light);
  font-size: 0.9rem;
}

.metaInput {
  background: transparent;
  color: var(--task-editor-text-light);
  border: 1px solid var(--task-title-border);
  padding: 4px 8px;
  border-radius: 4px;
}

.noTask {
  color: var(--task-editor-text-muted);
  text-align: center;
  padding: 2rem;
  font-style: italic;
}

.editor-container {
  border: 1px solid var(--task-editor-border);
  border-radius: 0.5rem;
  background-color: var(--task-editor-bg);
  width: 50%;
  transition: all 0.3s ease;
}

/* STICKY HEADER - stays at top when scrolling */
.createHeader {
  position: sticky;
  top: 0;
  z-index: 10;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0.2rem 0.5rem 0.1rem 0.5rem;
  border-bottom: 1px solid var(--task-header-border);
  margin-bottom: 0rem;
  border-radius: 5px 5px 0px 0px;
  background-color: var(--task-header-bg);
  box-shadow: 0 2px 10px var(--task-header-shadow);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  transition: all 0.3s ease;
}

.statusS1, .saveControls, .autoSaveStatus, .statusContainer{
  margin: 0rem;
  padding: 0rem;
  font-size: smaller;
  font-weight:100;
  line-height: 1.2;
  font-family: monospace;
  background-color: none;
  margin: 0rem;
  padding: 0rem;
  display: flex;
  flex-direction: row;
  text-align: end;
  color: var(--task-header-text);
}

.autoSaveStatus, .statusContainer{
  margin: 0rem;
  padding: 0rem;
  display: flex;
  flex-direction: row;
  text-align: end;
}

.saveControls {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.buttonGroup{
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.saveButton,.deleteButton {
  padding: 3px;
  margin: 3px;
  background: var(--task-button-bg);
  color: var(--task-button-text);
  border: solid 1px var(--task-button-border);
  border-radius: 3px;
  cursor: pointer;
  width: 60px;
  height: 25px;
  font-size: smaller;
  font-weight:300;
  line-height: 1.2;
  font-family: monospace;
  background-color: none;
  font-size: 13px;
  transition: all 0.3s ease;
}

.saveButton.disabled,.deleteButton.disabled  {
  background: var(--task-button-disabled);
  cursor: not-allowed;
}

.saveButton:hover {
  background: var(--task-button-hover-bg);
  color: var(--task-button-hover-text);
  cursor: pointer;
  transition: all 0.5s ease-in-out;
}

.deleteButton:hover{
  background: var(--task-button-hover-bg);
  color: var(--task-delete-hover-text);
  cursor: pointer;
  transition: all 0.5s ease-in-out;
}

.saveIndicator {
  font-size: 0.9rem;
  color: var(--task-editor-text-muted);
}

.descriptionBlock.required {
  border: 2px solid #ffa500;
}

.requirementNote {
  color: #ff6b35;
  font-size: 0.9rem;
  margin-top: 0.5rem;
  padding: 0.5rem;
  background: #fff3e0;
  border-radius: 4px;
}

/* Add container for proper scrolling */
.editorContainer {
  height: 100vh;
  position: relative;
}

/* Content area that scrolls */
.editorContent {
  padding-top: 1rem;
  min-height: calc(100vh - 60px);
}

/* ============================================================================== */
/* TIPTAP EDITOR STYLES */
/* ============================================================================== */

/* TipTap Editor Toolbar */
.editorToolbar {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 5px;
  align-items: center;
  transition: all 0.3s ease;
}

.toolbarGroup {
  display: flex;
  gap: 6px;
  padding: 2px;
  background: var(--editor-toolbar-bg);
  border: 1px solid var(--editor-toolbar-border);
  border-radius: 6px;
  transition: all 0.3s ease;
}

.toolbarGroup button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  cursor: pointer;   
  font-family: monospace;
  font-weight: 500;
  border: none;
  border-radius: 4px;
  background: transparent;
  color: var(--editor-content-text);
  font-size: 15px;
  transition: all 0.3s ease;
}

.toolbarGroup button:hover:not(:disabled) {
  background: var(--task-desc-hover-bg);
  color: var(--task-editor-text);
}

.toolbarGroup button:active {
  transform: scale(0.95);
}

.toolbarGroup button.active {
  background: var(--editor-accent);
  color: #fff;
}

.toolbarGroup button:disabled {
  opacity: 0.4;
  cursor: not-allowed;
}

/* Heading Select Dropdown */
.headingSelect {
  padding: 8px 12px;
  border: 1px solid var(--editor-toolbar-border);
  border-radius: 6px;
  background: var(--editor-toolbar-bg);
  color: var(--editor-content-text);
  cursor: pointer;
  font-size: 12px;
  min-width: 120px;
  transition: all 0.3s ease;
}

.headingSelect:hover {
  background: var(--task-desc-hover-bg);
  border-color: var(--editor-accent);
}

/* Color Picker */
.colorPicker {
  width: 32px;
  height: 32px;
  border: 1px solid var(--editor-toolbar-border);
  border-radius: 6px;
  cursor: pointer;
  background: var(--editor-toolbar-bg);
  transition: all 0.3s ease;
}

.characterCount {
  font-size: 12px;
  color: var(--task-editor-text-muted);
  padding: 0 8px;
  white-space: nowrap;
  font-family: monospace;
}

/* Simple Editor Wrapper */
.simpleEditorWrapper {
  border: 1px solid var(--editor-toolbar-border);
  border-radius: 0 0 8px 8px;
  min-height: 300px;
  background: var(--editor-content-bg);
  transition: all 0.3s ease;
}

.simpleEditorWrapper.highlighted {
  border-color: #ffc107;
  background: var(--editor-highlight-bg);
}

.simpleEditorContent {
  min-height: 300px;
}

/* TipTap Editor Content */
.tiptapEditor {
  padding: 20px;
  outline: none;
  min-height: 300px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  line-height: 1.7;
  font-size: 15px;
  color: var(--editor-content-text);
  background: transparent;
  transition: all 0.3s ease;
}

/* Content Styles */
.tiptapEditor h1 {
  font-size: 2.2em;
  font-weight: 700;
  margin: 0.5em 0 0.6em 0;
  color: var(--editor-heading-color);
  line-height: 1.3;
  border-bottom: 3px solid var(--editor-heading-border);
  padding-bottom: 0.4em;
}

.tiptapEditor h2 {
  font-size: 1.8em;
  font-weight: 600;
  margin: 1em 0 0.5em 0;
  color: var(--editor-heading-color);
  border-left: 4px solid var(--editor-heading-border);
  padding-left: 0.4em;
  line-height: 1.3;
}

.tiptapEditor h3 {
  font-size: 1.4em;
  font-weight: 600;
  margin: 0.8em 0 0.4em 0;
  color: var(--editor-content-text);
  line-height: 1.4;
}

.tiptapEditor p {
  margin: 0.8em 0;
  line-height: 1.3;
  color: var(--editor-content-text);
}

.tiptapEditor ul, .tiptapEditor ol {
  margin: 1em 0;
  padding-left: 2em;
  color: var(--editor-content-text);
}

.tiptapEditor li {
  margin: 0.4em 0;
  line-height: 1.6;
  display: flex;
  flex-direction: row;
}

.tiptapEditor li p {
  height: auto !important;
  min-height: auto !important;
  padding: 0 !important;
  margin: 0 !important;
  line-height: 1.6;
  display: inline !important;
  word-wrap: break-word;
  overflow-wrap: break-word;
}

.editorContainer input[type="checkbox"] {
  appearance: none;
  outline: none;
  width: 1.3rem;
  height: 1.3rem;
  aspect-ratio: 1;
  padding: 0.25rem;
  background: transparent;
  border-radius: 2px;
  display: grid;
  place-content: center;
  cursor: pointer;
  border: 1px solid var(--task-editor-text-muted);
  margin-right: 8px;
  margin-top: 2px;
  transition: all 0.3s ease;
}

.editorContainer input[type="checkbox"]:checked {
  background-color: var(--editor-accent);
}

.editorContainer input[type="checkbox"]:checked::after {
  content: "âœ”";
  color: white;
  font-size: 1rem;
}

.colorInput {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 25px;
  height: 25px;
  background-color: transparent;
  border: var(--editor-toolbar-border) solid 1px;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
}

.colorInput::-webkit-color-swatch {
  border-radius: 50%;
  border: none;
}

.colorInput::-moz-color-swatch {
  border-radius: 50%;
  border: none;
}

.tiptapEditor blockquote {
  border-left: 4px solid var(--editor-blockquote-border);
  margin: 1.5em 0;
  padding: 1em 1.5em;
  color: var(--task-editor-text-light);
  font-style: italic;
  background: var(--editor-code-bg);
  border-radius: 0 8px 8px 0;
  position: relative;
  transition: all 0.3s ease;
}

.tiptapEditor blockquote::before {
  content: '"';
  font-size: 4em;
  color: var(--task-editor-text-muted);
  position: absolute;
  top: -0.2em;
  left: 0.2em;
  font-family: Georgia, serif;
}

.tiptapEditor pre {
  background: var(--editor-code-bg);
  color: var(--editor-content-text);
  border: 1px solid var(--editor-toolbar-border);
  border-radius: 8px;
  padding: 1.5em;
  overflow-x: auto;
  font-family: 'JetBrains Mono', 'Fira Code', 'Courier New', monospace;
  font-size: 0.9em;
  line-height: 1.5;
  margin: 1.5em 0;
  transition: all 0.3s ease;
}

.tiptapEditor code {
  background: var(--editor-code-bg);
  color: var(--editor-code-color);
  padding: 0.3em 0.5em;
  border-radius: 2px;
  font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode';
  font-size: 0.9em;
  font-weight: 500;
  border: 1px solid var(--editor-toolbar-border);
}

.tiptapEditor pre code {
  background: none;
  color: inherit;
  padding: 0;
  border-radius: 0;
  border: none;
}

.tiptapEditor mark {
  background: var(--editor-highlight-bg);
  color: var(--task-editor-text);
  padding: 0.2em 0.3em;
  border-radius: 3px;
}

.tiptapEditor hr {
  margin: 2em 0;
  border: none;
  border-top: 2px solid var(--editor-toolbar-border);
}

/* Task List Styles */
.tiptapEditor ul[data-type="taskList"] {
  list-style: none;
  padding-left: 0;
  margin: 1em 0;
}

.tiptapEditor li[data-type="taskItem"] {
  display: flex !important;
  align-items: flex-start !important;
  gap: 0.5rem !important;
  margin: 0.6em 0 !important;
  padding: 0.3em 0 !important;
  border-radius: 4px;
  transition: all 0.3s ease;
  list-style: none !important;
  height: auto !important;
  min-height: auto !important;
  line-height: 1.6;
}

.tiptapEditor li[data-type="taskItem"]:hover {
  background-color: var(--task-desc-hover-bg);
}

/* Link Styles */
.tiptapEditor .customLink {
  color: var(--editor-accent);
  text-decoration: none;
  border-bottom: 2px solid transparent;
  transition: all 0.2s ease;
  padding: 0.1em 0;
}

.tiptapEditor .customLink:hover {
  color: var(--editor-heading-color);
  border-bottom-color: var(--editor-accent);
  background: var(--task-desc-hover-bg);
}

/* Table Styles */
.tiptapEditor table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  margin: 1em 0;
  overflow: hidden;
  background: var(--editor-table-bg);
  border-radius: 8px;
  transition: all 0.3s ease;
}

.tiptapEditor td, .tiptapEditor th {
  min-width: 1em;
  border: 1px solid var(--editor-table-border);
  padding: 8px 12px;
  vertical-align: top;
  box-sizing: border-box;
  position: relative;
  color: var(--editor-content-text);
}

.tiptapEditor th {
  font-weight: bold;
  text-align: left;
  background: var(--editor-code-bg);
  color: var(--editor-content-text);
}

.tiptapEditor .selectedCell:after {
  z-index: 2;
  position: absolute;
  content: "";
  left: 0; right: 0; top: 0; bottom: 0;
  background: var(--task-desc-hover-bg);
  pointer-events: none;
}

/* Placeholder */
.tiptapEditor p.is-editor-empty:first-child::before {
  color: var(--task-editor-text-muted);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
  font-style: italic;
}

/* Enhanced Task List Styles - COMPLETE FIX */
.tiptapEditor li[data-type="taskItem"] input[type="checkbox"] {
  appearance: none !important;
  outline: none !important;
  width: 1.2rem !important;
  height: 1.2rem !important;
  margin: 0.1em 0 0 0 !important;
  padding: 0 !important;
  background: transparent !important;
  border: 2px solid var(--task-editor-text-muted) !important;
  border-radius: 3px !important;
  cursor: pointer !important;
  flex-shrink: 0 !important;
  position: relative !important;
  transition: all 0.2s ease !important;
}

/* Checkmark styling */
.tiptapEditor li[data-type="taskItem"] input[type="checkbox"]:checked {
  background: var(--editor-accent) !important;
  border-color: var(--editor-accent) !important;
}

.tiptapEditor li[data-type="taskItem"] input[type="checkbox"]:checked::before {
  content: 'âœ“' !important;
  position: absolute !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;
  color: white !important;
  font-size: 0.8rem !important;
  font-weight: bold !important;
  line-height: 1 !important;
}

.tiptapEditor li[data-type="taskItem"] input[type="checkbox"]:hover {
  border-color: var(--editor-accent) !important;
  background: var(--task-desc-hover-bg) !important;
}

/* Task item text content */
.tiptapEditor li[data-type="taskItem"] > label,
.tiptapEditor li[data-type="taskItem"] > div,
.tiptapEditor li[data-type="taskItem"] > p {
  flex: 1 !important;
  line-height: 1.6 !important;
  color: var(--editor-content-text) !important;
  word-wrap: break-word !important;
  overflow-wrap: break-word !important;
  margin: 0 !important;
  padding: 0 !important;
  height: auto !important;
  min-height: auto !important;
}

/* Completed task styling */
.tiptapEditor li[data-type="taskItem"][data-checked="true"] > label,
.tiptapEditor li[data-type="taskItem"][data-checked="true"] > div,
.tiptapEditor li[data-type="taskItem"][data-checked="true"] > p,
.tiptapEditor li[data-type="taskItem"]:has(input:checked) > label,
.tiptapEditor li[data-type="taskItem"]:has(input:checked) > div,
.tiptapEditor li[data-type="taskItem"]:has(input:checked) > p {
  text-decoration: line-through !important;
  opacity: 0.6 !important;
  color: var(--task-editor-text-muted) !important;
}

/* Ensure regular lists work properly too */
.tiptapEditor ul:not([data-type="taskList"]) li,
.tiptapEditor ol li {
  display: list-item !important;
  height: auto !important;
  min-height: auto !important;
  margin: 0.4em 0 !important;
  line-height: 1.6 !important;
  align-items: flex-start !important;
}
 
.tiptapEditor ul:not([data-type="taskList"]) li p,
.tiptapEditor ol li p {
  display: inline !important;
  height: auto !important;
  min-height: auto !important;
  padding: 0 !important;
  margin: 0 !important;
  line-height: inherit !important;
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .editorToolbar {
    padding: 8px;
    gap: 4px;
  }
  
  .toolbarGroup {
    gap: 2px;
    padding-right: 8px;
  }
  
  .toolbarGroup button {
    padding: 6px 8px;
    font-size: 11px;
    min-height: 28px;
    min-width: 28px;
  }
  
  .headingSelect {
    min-width: 90px;
    font-size: 11px;
  }
  
  .characterCount {
    font-size: 11px;
  }
  
  .tiptapEditor {
    padding: 16px;
    font-size: 14px;
  }
}